function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype&&!("isIntersecting"in IntersectionObserverEntry.prototype)&&Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return this.intersectionRatio>0}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var r=0;r<this.length;r++)e.call(t,this[r],r,this)});var IOlazy=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.image,n=void 0===r?".lazyload":r,i=t.threshold,s=void 0===i?.006:i;_classCallCheck(this,e),this.threshold=s,this.image=document.querySelectorAll(n),this.observer=new IntersectionObserver(this.handleChange.bind(this),{threshold:[this.threshold]}),this.lazyLoad()}return _createClass(e,[{key:"handleChange",value:function(e){var t=this;e.forEach(function(e){e.isIntersecting&&(e.target.classList.add("visible"),e.target.dataset.srcset&&(e.target.srcset=e.target.dataset.srcset),e.target.dataset.src&&(e.target.src=e.target.dataset.src),t.observer.unobserve(e.target))})}},{key:"lazyLoad",value:function(){var e=this;this.image.forEach(function(t){e.observer.observe(t)})}}]),e}();